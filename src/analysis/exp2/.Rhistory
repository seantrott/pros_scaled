library(tidyverse)
library(forcats)
library(lme4)
library(broom.mixed)
library(ggridges)
setwd("/Users/seantrott/Dropbox/UCSD/Research/IndirectSpeechActs/Prosody/pros_scaled/src/analysis/exp1/")
df_critical = read.csv("../../../data/processed/exp1/exp1.csv")
df_normed = read_csv("../../../data/processed/norming/item_means.csv")
df_merged = df_critical %>%
inner_join(df_normed, by = c("stimNum", "form", "topic"))
nrow(df_critical)
nrow(df_merged)
df_merged = df_merged %>%
mutate(Intent = condition)
mean(df_merged$correct)
df_merged %>%
group_by(Intent) %>%
summarise(mean_request = mean(numeric_response))
df_merged %>%
group_by(form, Intent) %>%
summarise(mean_request = mean(numeric_response))
df_merged %>%
ggplot(aes(x = form, y = numeric_response, fill = Intent)) +
geom_bar(stat="summary", position="dodge", fun="mean") +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95)) +
theme_minimal() +
ggtitle("Request interpretations by condition") +
xlab("Condition") +
ylab("Percent choosing 'request'") +
scale_y_continuous(limits = c(0, 1))
df_merged %>%
ggplot(aes(x = form, y = numeric_response, fill = Intent)) +
geom_bar(stat="summary", position="dodge", fun="mean") +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95)) +
theme_minimal() +
ggtitle("Request interpretations by condition") +
xlab("Condition") +
ylab("Percent choosing 'request'") +
scale_y_continuous(limits = c(0, 1))
df_merged %>%
ggplot(aes(x = mean_request,
y = numeric_response,
color = Intent)) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange') +
theme_minimal() +
ggtitle("Request interpretations by p(request)") +
xlab("P(request)") +
ylab("Proportion choosing 'request'") +
scale_y_continuous(limits = c(0, 1))
model_full = glmer(data=df_merged,
response ~ Intent + form + mean_request +
(1 + Intent | topic) +
(1 + Intent + mean_request | subject) +
(1 | speaker),
control=glmerControl(optimizer="bobyqa"),
family=binomial())
summary(model_full)
model_no_intent = glmer(data=df_merged,
response ~ form + mean_request +
(1 + Intent | topic) +
(1 + Intent + mean_request | subject) +
(1 | speaker),
control=glmerControl(optimizer="bobyqa"),
family=binomial())
anova(model_full, model_no_intent)
anova(model_full, model_no_intent)
model_int = glmer(data=df_merged,
response ~ Intent * mean_request + form +
(1 | topic) +
(1  | subject) +
(1 | speaker),
control=glmerControl(optimizer="bobyqa"),
family=binomial())
summary(model_int)
df_merged$prior_z = abs(scale(df_merged$mean_request))
hist(df_merged$prior_z )
df_merged$certainty = abs(scale(df_merged$mean_request))
model_int = glmer(data=df_merged,
response ~ Intent * certainty + form +
(1 | topic) +
(1  | subject) +
(1 | speaker),
control=glmerControl(optimizer="bobyqa"),
family=binomial())
summary(model_int)
df_tidy = broom.mixed::tidy(model_full)
df_tidy %>%
filter(effect == "fixed") %>%
ggplot(aes(x = term,
y = estimate)) +
geom_point() +
coord_flip() +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_errorbar(aes(ymin = estimate - 2*std.error,
ymax = estimate + 2*std.error),
width=.2,
position=position_dodge(.9)) +
labs(x = "Predictor",
y = "Estimate") +
theme_minimal()
df_tidy %>%
filter(effect == "fixed") %>%
filter(term != "(Intercept)") %>%
ggplot(aes(x = term,
y = estimate)) +
geom_point() +
coord_flip() +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_errorbar(aes(ymin = estimate - 2*std.error,
ymax = estimate + 2*std.error),
width=.2,
position=position_dodge(.9)) +
labs(x = "Predictor",
y = "Estimate") +
theme_minimal()
summ = summary(model_full)
summ
summ$coefficients
summ$coefficients["IntentRequest"]
summ$coefficients[4]
summ$coefficients[2]
summ$coefficients
df_tidy
slope_intent = filter(df_tidy, term == "IntentRequest")$estimate
slope_intent = filter(df_tidy, term == "IntentRequest")$estimate
slope_form = filter(df_tidy, term == "formnonconventional")$estimate
slope_prior = filter(df_tidy, term == "mean_request")$estimate
summ$varcor
sum(filter(df_tidy, effect == "ran_pars")$estimate)
filter(df_tidy, effect == "ran_pars")$estimate
summary(model_full)
h = filter(df_tidy, effect == "ran_pars")$estimate
h**2
var_re = sum(filter(df_tidy, effect == "ran_pars")$estimate**2)
var_re
slope_intent / sqrt(var_re)
slope_form / sqrt(var_re)
slope_form
slope_intnet
slope_intent
slope_prior / sqrt(var_re)
library(emmeans)
install.packages("emmeans")
library(emmeans)
?emmeans
emmeans(model_full)
emmeans(model_full, ~ Intent)
emmeans(model_full, ~ Intent | mean_request)
emmeans(model_full, ~  mean_request)
df_merged_filtered = df_merged %>%
filter(rt > 0) %>%
mutate(log_rt = log10(rt))
df_merged_filtered %>%
filter(correct == 1) %>%
ggplot(aes(x = form,
y = log_rt,
color = condition)) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange') +
labs(title = "RT on correct responses",
y = "log(RT)",
x = "Form") +
theme_minimal()
df_merged_filtered %>%
filter(correct == 1) %>%
ggplot(aes(x = log_rt,
y = form,
fill = condition)) +
geom_density_ridges2(aes(height = ..density..),
color=gray(0.25), alpha = 0.5,
scale=0.85, size=0.75, stat="density") +
theme_minimal()
df_merged_filtered %>%
# filter(correct == 1) %>%
ggplot(aes(x = mean_request,
y = log_rt,
color = condition)) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 1*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 1*sd(x)/sqrt(length(x))},
geom= 'pointrange') +
labs(title = "RT on correct responses",
y = "log(RT)",
x = "P(request)") +
theme_minimal()
df_audio = read_csv("../../../data/processed/audio/audio_features_original_stimuli.csv")
df_audio$label = factor(df_audio$label)
df_audio$label = fct_recode(df_audio$label,
"Request" = "IR",
"Non-Request" = "Literal")
df_audio$speaker = factor(df_audio$speaker)
df_audio = df_audio %>%
group_by(speaker) %>%
mutate(mean_f0_z_score = scale(mean_f0),
duration_f0_z_score = scale(duration_f0),
range_f0_z_score = scale(range_f0),
sd_f0_z_score = scale(sd_f0),
slope_f0_z_score = scale(slope_f0),
mean_intensity_z_score = scale(mean_intensity),
sd_intensity_z_score = scale(sd_intensity)
)
df_audio$condition = df_audio$label
df_audio = df_audio %>%
select(condition, speaker, stimNum, mean_f0_z_score, duration_f0_z_score, range_f0_z_score,
sd_f0_z_score, slope_f0_z_score, mean_intensity_z_score, sd_intensity_z_score)
df_merged_audio = df_merged %>%
inner_join(df_audio, on = c("condition", "speaker", "stimNum"))
nrow(df_merged_audio)
df_merged_audio$response = fct_recode(df_merged_audio$response,
"Request" = "request",
"Non-Request" = "literal")
# df_merged_audio$response = factor(df_merged_audio$response, levels=c("Request", "Non-Request"))
df_merged_audio$form = factor(df_merged_audio$form, levels=c("nonconventional", "conventional"))
df_audio$condition = df_audio$label
df_audio = df_audio %>%
select(condition, speaker, stimNum, mean_f0_z_score, duration_f0_z_score, range_f0_z_score,
sd_f0_z_score, slope_f0_z_score, mean_intensity_z_score, sd_intensity_z_score)
nrow(df_audio)
df_audio = read_csv("../../../data/processed/audio/audio_features_original_stimuli.csv")
df_audio$label = factor(df_audio$label)
df_audio$label = fct_recode(df_audio$label,
"Request" = "IR",
"Non-Request" = "Literal")
df_audio$speaker = factor(df_audio$speaker)
df_audio = df_audio %>%
group_by(speaker) %>%
mutate(mean_f0_z_score = scale(mean_f0),
duration_f0_z_score = scale(duration_f0),
range_f0_z_score = scale(range_f0),
sd_f0_z_score = scale(sd_f0),
slope_f0_z_score = scale(slope_f0),
mean_intensity_z_score = scale(mean_intensity),
sd_intensity_z_score = scale(sd_intensity)
)
df_audio
df_audio = read_csv("../../../data/processed/audio/audio_features_original_stimuli.csv")
df_audio$label = factor(df_audio$label)
df_audio$condition = fct_recode(df_audio$label,
"Request" = "IR",
"Non-Request" = "Literal")
df_audio$speaker = factor(df_audio$speaker)
df_audio = df_audio %>%
group_by(speaker) %>%
mutate(mean_f0_z_score = scale(mean_f0),
duration_f0_z_score = scale(duration_f0),
range_f0_z_score = scale(range_f0),
sd_f0_z_score = scale(sd_f0),
slope_f0_z_score = scale(slope_f0),
mean_intensity_z_score = scale(mean_intensity),
sd_intensity_z_score = scale(sd_intensity)
)
df_audio = df_audio %>%
select(condition, speaker, stimNum, mean_f0_z_score, duration_f0_z_score, range_f0_z_score,
sd_f0_z_score, slope_f0_z_score, mean_intensity_z_score, sd_intensity_z_score)
nrow(df_audio)
df_audio$speaker
df_merged_audio = df_merged %>%
inner_join(df_audio, on = c("condition", "speaker", "stimNum"))
nrow(df_merged_audio)
nrow(df_merged)
df_merged$speaker
df_merged$stimNum
df_merged$condition
df_audio$condition
df_audio$condition = fct_recode(df_audio$label,
"Request" = "IR",
"Non-Request" = "Literal")
df_audio = read_csv("../../../data/processed/audio/audio_features_original_stimuli.csv")
df_audio$label = factor(df_audio$label)
df_audio$condition = fct_recode(df_audio$label,
"Request" = "IR",
"Non-Request" = "Literal")
df_audio$label
df_audio = read_csv("../../../data/processed/audio/audio_features_original_stimuli.csv")
df_audio$label = factor(df_audio$label)
df_audio = read_csv("../../../data/processed/audio/audio_features_original_stimuli.csv")
df_audio$label = factor(df_audio$label)
df_audio$condition = fct_recode(df_audio$label,
"Request" = "ir",
"Non-Request" = "literal")
df_audio$speaker = factor(df_audio$speaker)
df_audio = df_audio %>%
group_by(speaker) %>%
mutate(mean_f0_z_score = scale(mean_f0),
duration_f0_z_score = scale(duration_f0),
range_f0_z_score = scale(range_f0),
sd_f0_z_score = scale(sd_f0),
slope_f0_z_score = scale(slope_f0),
mean_intensity_z_score = scale(mean_intensity),
sd_intensity_z_score = scale(sd_intensity)
)
df_audio = df_audio %>%
select(condition, speaker, stimNum, mean_f0_z_score, duration_f0_z_score, range_f0_z_score,
sd_f0_z_score, slope_f0_z_score, mean_intensity_z_score, sd_intensity_z_score)
nrow(df_audio)
df_merged_audio = df_merged %>%
inner_join(df_audio, on = c("condition", "speaker", "stimNum"))
nrow(df_merged_audio)
df_merged_audio$response = fct_recode(df_merged_audio$response,
"Request" = "request",
"Non-Request" = "literal")
# df_merged_audio$response = factor(df_merged_audio$response, levels=c("Request", "Non-Request"))
df_merged_audio$form = factor(df_merged_audio$form, levels=c("nonconventional", "conventional"))
